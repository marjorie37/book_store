{"ast":null,"code":"import _classCallCheck from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/findev/Documents/projet1/book-store/frontend/src/containers/AddToCart.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nvar AddToCart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddToCart, _Component);\n\n  function AddToCart(props) {\n    var _this;\n\n    _classCallCheck(this, AddToCart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddToCart).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AddToCart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var books = this.props.books;\n      console.log(books);\n      return React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.props.addToCart(books);\n        },\n        style: {\n          backgroundColor: \"#f44336\"\n        },\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Buy\");\n    }\n  }]);\n\n  return AddToCart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    books: state.books.books\n  };\n};\n\nvar mapDispatchToProps = {\n  AddToCart: AddToCart\n};\nAddToCart.propTypes = {\n  books: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCart);","map":{"version":3,"sources":["/home/findev/Documents/projet1/book-store/frontend/src/containers/AddToCart.js"],"names":["React","Component","Button","PropTypes","connect","AddToCart","props","state","books","console","log","addToCart","backgroundColor","mapStateToProps","mapDispatchToProps","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BACQ;AAAA;;AACP,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,KAAL,CAAWK,SAAX,CAAqBH,KAArB,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AAAEI,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AASD;;;;EAjBqBX,S;;AAmBxB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK;AAAA,SAAK;AAChCC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA;AADa,GAAL;AAAA,CAA7B;;AAIA,IAAMM,kBAAkB,GAAG;AACzBT,EAAAA,SAAS,EAATA;AADyB,CAA3B;AAIAA,SAAS,CAACU,SAAV,GAAsB;AACpBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,KAAV,CAAgBC;AADH,CAAtB;AAIA,eAAeb,OAAO,CACpBS,eADoB,EAEpBC,kBAFoB,CAAP,CAGbT,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass AddToCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const books = this.props.books;\n    console.log(books);\n    return (\n      <Button\n        onClick={() => this.props.addToCart(books)}\n        style={{ backgroundColor: \"#f44336\" }}\n        variant=\"contained\"\n      >\n        Buy\n      </Button>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  books: state.books.books\n});\n\nconst mapDispatchToProps = {\n  AddToCart\n};\n\nAddToCart.propTypes = {\n  books: PropTypes.array.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddToCart);\n"]},"metadata":{},"sourceType":"module"}