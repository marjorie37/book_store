{"ast":null,"code":"import _objectSpread from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/findev/Documents/projet1/book-store/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TO_CART, INCREASE_QUANTITY } from \"../actions/types\";\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var index = state.findIndex(function (el) {\n        return el.item.title === action.item.title;\n      });\n\n      if (index === -1) {\n        return _toConsumableArray(state).concat([{\n          item: action.item,\n          quantity: action.quantity + 1\n        }]);\n      } else {\n        return state.map(function (item, i) {\n          return index === i ? _objectSpread({}, item, {\n            quantity: item.quantity + action.quantity + 1\n          }) : item;\n        });\n      }\n\n    case INCREASE_QUANTITY:\n      return state.map(function (ite) {\n        return _objectSpread({}, ite, {\n          quantity: ite.quantity + action.quantity\n        });\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/findev/Documents/projet1/book-store/frontend/src/reducers/cartReducer.js"],"names":["ADD_TO_CART","INCREASE_QUANTITY","state","action","type","index","findIndex","el","item","title","quantity","map","i","ite"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,iBAAtB,QAA+C,kBAA/C;AAEA,eAAe,YAA6B;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAL;AACE,UAAMK,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAgB,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,IAAH,CAAQC,KAAR,KAAkBN,MAAM,CAACK,IAAP,CAAYC,KAAlC;AAAA,OAAlB,CAAd;;AACA,UAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,kCAAWH,KAAX,UAAkB;AAAEM,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAAf;AAAqBE,UAAAA,QAAQ,EAAEP,MAAM,CAACO,QAAP,GAAkB;AAAjD,SAAlB;AACD,OAFD,MAEO;AACL,eAAOR,KAAK,CAACS,GAAN,CAAU,UAACH,IAAD,EAAOI,CAAP;AAAA,iBACfP,KAAK,KAAKO,CAAV,qBAESJ,IAFT;AAGME,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgBP,MAAM,CAACO,QAAvB,GAAkC;AAHlD,eAKIF,IANW;AAAA,SAAV,CAAP;AAQD;;AACH,SAAKP,iBAAL;AACE,aAAOC,KAAK,CAACS,GAAN,CAAU,UAAAE,GAAG;AAAA,iCACfA,GADe;AAElBH,UAAAA,QAAQ,EAAEG,GAAG,CAACH,QAAJ,GAAeP,MAAM,CAACO;AAFd;AAAA,OAAb,CAAP;;AAKF;AACE,aAAOR,KAAP;AAtBJ;AAwBD","sourcesContent":["import { ADD_TO_CART, INCREASE_QUANTITY } from \"../actions/types\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const index = state.findIndex(el => el.item.title === action.item.title);\n      if (index === -1) {\n        return [...state, { item: action.item, quantity: action.quantity + 1 }];\n      } else {\n        return state.map((item, i) =>\n          index === i\n            ? {\n                ...item,\n                quantity: item.quantity + action.quantity + 1\n              }\n            : item\n        );\n      }\n    case INCREASE_QUANTITY:\n      return state.map(ite => ({\n        ...ite,\n        quantity: ite.quantity + action.quantity\n      }));\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}